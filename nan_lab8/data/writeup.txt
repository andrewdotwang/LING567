LING 567 Lab8 Write-up
Writer: Sehyun Kim
Reviewer: Andrew Wang

1.
For MRS refinement:

Locative verb
We noticed that not all predicates were being realized for sentences containing the locative verb. For example, when we checked the simple MRS for the example below, only ‘exist_q_rel’ and ‘_dog_n_rel’ were found in the RELS list while everything from the VP was missing, including ‘_be+located_v_rel.’
mmt #16
狗 伫 公園 裡
kau3 teu4 koeng1hng3 lai4
dog be.at park in
The dogs are in the park
To fix this, we added the supertype norm-sem-lex-item to locative-verb-lex.

locative-verb-lex := verb-lex & trans-first-arg-control-lex-item & norm-sem-lex-item &
 [ SYNSEM.LOCAL [ CAT.VAL [ SUBJ < #subj >,
                            COMPS < #comps >,
                            SPR < >,
                            SPEC < > ],
                  CONT.HOOK.XARG #xarg ],
   ARG-ST < #subj &
            [ LOCAL [ CONT.HOOK.INDEX #xarg,
                      CAT [ VAL [ SPR < >,
                                  COMPS < > ],
                            HEAD noun ] ] ],
            #comps &
            [ LOCAL.CAT [ VAL [ COMPS < > ],
                          HEAD adp ] ] > ].

Adposition
The _in_p_rel predicate also had an underspecified ARG1. We fixed this by adding in to ARG1 in norm-adposition-lex and linking it to HOOK.XARG with #xarg.

norm-adposition-lex := norm-sem-lex-item & no-hcons-lex-item & basic-intersective-mod-lex & non-local-none-lex-item &
  [ ARG-ST < #comp >,
    SYNSEM [ LKEYS.KEYREL arg12-ev-relation &
                          [ PRED #pred,
                            ARG1 #xarg,
                            ARG2 #ind ],
             L-QUE #lque,
             LOCAL [ CONT [ HOOK.XARG #xarg,
                            RELS.LIST < [ PRED #pred,
                                        ARG0 event,
                                        ARG1 event-or-ref-index ] > ],
                     CAT [ WH.BOOL -,
                           VAL [ SPR < >,
                                 SPEC < >,
                                 SUBJ < >,
                                 COMPS < #comp &
                                         [ L-QUE #lque,
                                           LOCAL [ CAT [ HEAD noun,
                                                         VAL.SPR < > ],
                                                   CONT.HOOK.INDEX #ind ] ] > ],
                           HEAD adp &
                                [ MOD < [ LOCAL.CAT [ VAL.SPR cons,
                                                      WH.BOOL -,
                                                      HEAD.AUX - ] ] > ] ] ] ] ].


Clausal modifier
We found a mismatch in MRS between Southern Min and English regarding sentences containing a clausal modifier. This was because our grammar has ‘_then_subord_rel’ and ‘_so_subord_rel’ instead of ‘_after_subord_rel’ and ‘_because_subord_rel,’ respectively, and the matrix-subordinate relationship was the opposite in two languages as a result.

# mmt 25
貓 睏 所以 狗 睏
niau2 khun5 soe3i3 kau3 khun5
cat sleep so dog sleep
The dog sleeps because the cat sleeps

# mmt 26
貓 睏 就 狗 睏
niau2 khun5 tsiu5 kau3 khun5
cat sleep then dog sleep
The dog sleeps after the cat sleeps

To change the predicate values and match the arguments accordingly, we created the following transfer rules:

after-then-mtr := monotonic_mtr &
[ INPUT [ RELS < [PRED "_after_subord_rel",
		   LBL #lbl,
		   ARG0 #arg0,
		   ARG1 #arg1,
		   ARG2 #arg2 ] > ],
  OUTPUT [ RELS < [ PRED "_then_subord_rel",
             LBL #lbl,
             ARG0 #arg0,
             ARG1 #arg2,
             ARG2 #arg1 ] > ] ].


because-so-mtr := monotonic_mtr &
[ INPUT [ RELS < [PRED "_because_subord_rel",
		   LBL #lbl,
		   ARG0 #arg0,
		   ARG1 #arg1,
		   ARG2 #arg2 ] > ],
  OUTPUT [ RELS < [ PRED "_so_subord_rel",
             LBL #lbl,
             ARG0 #arg0,
             ARG1 #arg2,
             ARG2 #arg1 ] > ] ].

These changes were successful in matching the predicate and arguments values, but were not enough to fix our translations for MMT #25/26, as mentioned in Q4 of this writeup.

2.
For reducing overgeneration:

We were seeing a problem where sentences with clausal modifiers were alternatively interpreted as wh-questions. By adding non-local-none-lex-item here, we were able to fix this issue:

adverb-subord-lex-item := no-rels-hcons-lex-item & basic-icons-lex-item & non-local-none-lex-item&

For MMT #16, we were getting two generations: one that was intended and one that was grammatically incorrect. The erroneous output showed the locative verb occurring at the end of the sentence, which is not possible in our language. When we tried parsing it, we got two parses: one where the locative verb dropped its argument and ‘in the park’ became a modifier of ‘dog’ instead, and another where ‘in the park’ and the locative verb were combined as a comp-head phrase.

mmt #16
狗 伫 公園 裡
kau3 teu4 koeng1hng3 lai4
dog be.at park in
The dogs are in the park

To fix this, we added [ HEAD.AUX - ] to SYNSEM, and [ OPT - ] to COMPS here:

locative-verb-lex := verb-lex & trans-first-arg-control-lex-item & norm-sem-lex-item &
 [ SYNSEM.LOCAL [ CAT [ VAL [ SUBJ < #subj >,
                            COMPS < #comps >,
                            SPR < >,
                            SPEC < > ], HEAD.AUX - ],
                  CONT.HOOK.XARG #xarg ],
   ARG-ST < #subj &
            [ LOCAL [ CONT.HOOK.INDEX #xarg,
                      CAT [ VAL [ SPR < >,
                                  COMPS < > ],
                            HEAD noun ] ] ],
            #comps &
            [ LOCAL [ CAT [ VAL [ COMPS < > ],
                          HEAD adp ] ], OPT - ] > ].


To make the translation for MMT #22 work, we removed [ WH.BOOL - ] from transitive-decl-clausal-comps-verb-verb-lex:

transitive-decl-clausal-comps-verb-verb-lex := clausal-verb-lex & clausal-second-arg-trans-lex-item &
  [ SYNSEM [ LOCAL.CAT.VAL.COMPS < [ LOCAL [ CAT [ HEAD +vc &
                                                        [ FORM finite ]
                                                   ],
                                             CONT.HOOK.INDEX.SF prop ] ] >,
             NON-LOCAL.QUE.LIST < > ] ].

This allowed the verb ‘think’ to take a wh-question as a complement.

# mmt 22
汝 想 狗 追 啥
leu0 siun4 kau3 tsui1 sia2
you think dog chase what
What do you think the dogs chase

Translating MMT #9 was also not successful, and looking at the parse trees in LKB, we discovered that the second coordinate was actually being interpreted as a subordinate clause.

# mmt 9
也 狗 追 車 也 貓 追 狗
a4 kau3 tsui1 tshia1 a4 niau2 tsui1 kau3
and dog chase car and cat chase dog
Dogs chase cars and cats chase dogs

To fix this issue, we added SUBORDINATED none to s4-left-coord-rule:

s4-left-coord-rule := omni-conj-first-left-coord-rule & s-bottom-coord-phrase &
  [ SYNSEM [ SUBORDINATED none,
	     LOCAL.COORD-STRAT "4" ] ].

As suggested in the lab instructions, we also added this to our grammar to control overgeneration by handling the multiplication of clauses:

qeq :+
   [ HARG.INSTLOC #il,
      LARG.INSTLOC #il ].

3.
# mmt 6
我 想 看 汝 知 狗 追 車
gua3 siun4 khua5 leu0 tsai1 kau3 tsui1 tshia1
1SG think COMP 2SG know dog chase car
I think that you know that dogs chase cars

We’re seeing realization ambiguity for mmt #6 mainly because of the interaction between (1) the optional nature of the complementizer and (2) the possibility of focus construction. However, we also noticed the complementizer sometimes occurs in places where it shouldn’t, such as at the end of the phrase or right next to another complementizer. We wanted to figure out what was causing this issue, but unfortunately ran out of time.

# mmt 8
貓 合 狗 追 車
niau2 tsia?8 kau3 tsui1 tshia1
cat and dog chase car
Cats and dogs chase cars

The realization ambiguity for mmt #8 is mostly because we have multiple coordinators that work for nominal coordination. Moreover, since 交 and 合 work for both nouns and NPs, ‘dogs’ and ‘cats’ can be coordinated either at the noun level or the NP level, especially considering that nouns in Southern Min don’t take obligatory determiners. We think this is why there are a few pairs of identical-looking sentences. Also, focus is adding to the ambiguity here as well.

In addition, for some translations we have outputs appear to be identical. We know we have multiple trees for the strings that give the same MRS, but we ran out of time to investigate these properly.

4.
For eng2nan, we are able to translate 23/26 sentences. We were not able to translate these:

MMT #9
English: Dogs chase cars and cats chase dogs
Nan:
也 狗 追 車 也 貓 追 狗
and dog chase car and cat chase dog

We have the omnisyndeton clausal conjunction word 也, and our grammar is able to parse the nan sentence after adding SUBORDINATED none to s4-left-coord-rule to our grammar. However, neither nan2nan nor eng2nan work. We took a deeper look into the MRS for nan and for english, and we noticed that both L-HNDL and R-HNDL are not linked to anything in our grammar, but they are linked to the LBLs for "chase" in english. We don’t know if this is the cause, but ran out of time to continue investigating.

We were not able to translate:
MMT #25
English:
The dog sleeps because the cat sleeps
貓 睏 所以 狗 睏
cat sleep so dog sleep

MMT #26
English:
The dog sleeps after the cat sleeps
貓 睏 就 狗 睏
cat sleep then dog sleep

nan2nan and eng2nan don’t work for both of these sentences, likely for the same reasons. As mentioned before, in our grammar, we have '_so_subord_rel' instead of '_because_subord_rel,' and '_then_subord_rel' instead of '_after_subord_rel.' This means that what would be the matrix clause in the English sentence becomes the subordinate clause in our sentence, and vice versa. To deal with this, we created the two transfer rules mentioned previously.

These change the predications to what we expect in Southern Min, and swap ARG1 and ARG2. However, these changes weren’t enough and we’re still not sure how to continue.

For sje2nan, we are able to translate 17/18 sentences (not counting any sentences that weren’t covered in sje). The only sentence that we couldn’t translate is #9 again, where the problem is the same as for eng2nan.

5.
After all these changes, our coverage of the grammar has slightly decreased from 88.5% to 86.9%, but overgeneration has also decreased from 36.2% to 34.5%. Out of 119 test cases, 73 items parsed, with 1.67 parses per parsed item.

The most ambiguous item was our test case that received 8 parses:

#76 VP-NegVP interrogative
Source: author
Vetted: f
Judgment: g
Phenomena: {q}
伊 來 無 來
i1 lai2 bo2 lai2
3SG come not come
Is he coming?

Some of the parses are valid. For example, this could be either verbal coordination or sentential coordination because Southern Min allows subject dropping. The interpretations ‘Is he coming or not coming?’ and ‘Is he coming or is he not coming?’ are both acceptable for this example.

However, some of the parses are clearly ungrammatical. We found a couple of trees where 無 is being coordinated with one of the verbs, and this coordinated phrase is then coordinated with the other verb. This is likely because we have two lexical entries for 無 – one for the negative existential/possessive verb and one for the negative adverb. We’re not sure how to rule out the incorrect parses when the issue is caused by having multiple lexical entries.

In addition, we are also seeing 5 trees for this example:

#42 nominal conjunction word kiau
Source: author
Vetted: f
Judgment: g
Phenomena: {crd}
我 食 糖 交 鹽
gua3 tsia?8 thng2 kiau1 ieom2
1SG eat sugar and salt
I eat sugar and salt

Two of these trees are valid as this can be either noun conjunction or NP conjunction. However, we’re not sure why nouns are becoming focused here when they are in coordination and not even preceded by the verb.

We’re not exactly sure why our coverage slightly decreased since we didn’t make any changes to the testsuite, so we’re guessing it might be because we added additional constraints to our grammar while working on translations and improving overgeneration.
